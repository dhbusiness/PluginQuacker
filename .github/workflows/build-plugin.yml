name: Build TremoloViola Plugin

on:
  workflow_dispatch:  # This allows manual triggering via a button in the GitHub UI

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up environment
        run: |
          echo "Setting up environment variables"
          echo "JUCE_VERSION=7.0.8" >> $GITHUB_ENV
          echo "PROJECT_NAME=TremoloViolaVST" >> $GITHUB_ENV
          echo "JUCER_FILE=QuackerVST/QuackerVST.jucer" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          brew update
          brew install cmake

      - name: Setup JUCE
        uses: juce-framework/package-juce-action@v1.1
        with:
          version: 7.0.8

      - name: Modify module paths in JUCER file
        run: |
          echo "Updating module paths in JUCER file"
          
          # Create a backup of the original file
          cp "${JUCER_FILE}" "${JUCER_FILE}.backup"
          
          # JUCE package will have been installed in $HOME/.juce
          JUCE_MODULES_PATH="$HOME/.juce/JUCE-7.0.8/modules"
          echo "JUCE modules path: $JUCE_MODULES_PATH"
          
          # Check that the modules directory exists
          if [ -d "$JUCE_MODULES_PATH" ]; then
            echo "✅ JUCE modules directory exists"
            ls -la "$JUCE_MODULES_PATH" | head
          else
            echo "❌ JUCE modules directory not found!"
            echo "Looking for JUCE in HOME directory:"
            find $HOME -name "JUCE*" -type d | head
          fi
          
          # Modify the module paths in the JUCER file
          # Using XMLStarlet for more reliable XML manipulation
          brew install xmlstarlet
          
          # Create a temporary XML file with updated module paths
          xmlstarlet ed -L \
            -u "//MODULEPATH/@path" -v "$JUCE_MODULES_PATH" \
            "${JUCER_FILE}"
          
          # Verify the changes
          echo "Updated module paths in JUCER file:"
          grep -A 3 "MODULEPATH" "${JUCER_FILE}"
          
      - name: Find Projucer
        run: |
          # The action will install Projucer in $HOME/.juce/JUCE-7.0.8
          echo "Looking for Projucer:"
          find $HOME/.juce -name "Projucer*" | head
          
          # Store the path for later use
          PROJUCER_PATH=$(find $HOME/.juce -name "Projucer" -type f -executable | head -1)
          echo "Projucer path: $PROJUCER_PATH"
          echo "PROJUCER_PATH=$PROJUCER_PATH" >> $GITHUB_ENV
          
      - name: Resave and export JUCER project
        run: |
          echo "Resaving JUCER file with Projucer"
          "$PROJUCER_PATH" --resave "${JUCER_FILE}"
          
          echo "Exporting Xcode project"
          "$PROJUCER_PATH" --export-xcode "${JUCER_FILE}"
          
      - name: Build VST3 plugin
        run: |
          echo "Building VST3 plugin with Xcode"
          cd QuackerVST/Builds/MacOSX
          xcodebuild -project TremoloViolaVST.xcodeproj -configuration Release
          
          echo "Checking build output"
          find . -name "*.vst3" -type d
          
      - name: Package plugin
        run: |
          echo "Creating ZIP archive of VST3 plugin"
          mkdir -p artifact
          find QuackerVST/Builds/MacOSX -name "*.vst3" -type d -exec cp -r {} artifact/ \;
          cd artifact
          zip -r TremoloViola-macOS.zip *.vst3
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TremoloViola-macOS
          path: artifact/TremoloViola-macOS.zip
