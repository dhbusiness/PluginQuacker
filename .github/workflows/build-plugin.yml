name: Build JUCE Plugin

on:
  # This allows manual triggering from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build macOS Plugin
    runs-on: macos-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Setup Environment
        run: |
          echo "Setting up environment variables"
          echo "JUCE_VERSION=8.0.6" >> $GITHUB_ENV
          echo "PLUGIN_NAME=TremoloViola" >> $GITHUB_ENV
          echo "WORKSPACE=$(pwd)" >> $GITHUB_ENV
          
      - name: Download and Build JUCE
        run: |
          echo "Downloading JUCE $JUCE_VERSION"
          mkdir -p External
          cd External
          curl -L https://github.com/juce-framework/JUCE/archive/refs/tags/$JUCE_VERSION.zip -o JUCE.zip
          unzip JUCE.zip
          mv JUCE-$JUCE_VERSION JUCE
          
          echo "Building Projucer"
          cd JUCE/extras/Projucer/Builds/MacOSX
          xcodebuild -configuration Release
          
          # Verify Projucer was built successfully
          echo "Checking Projucer build location:"
          ls -la build/Release/Projucer.app/Contents/MacOS/
          
          # Make Projucer executable available with absolute path
          echo "PROJUCER_PATH=$WORKSPACE/External/JUCE/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer" >> $GITHUB_ENV
          
          # Store the absolute path to the JUCE modules
          echo "JUCE_MODULES_PATH=$WORKSPACE/External/JUCE/modules" >> $GITHUB_ENV
      
      - name: Examine and Update Module Paths FIRST
        run: |
          echo "Examining current module paths in project:"
          grep -A 1 MODULEPATH "$WORKSPACE/QuackerVST/QuackerVST.jucer" || echo "No MODULEPATH found"
          
          echo "Updating JUCE module paths in project file"
          # Create a backup of the original project file
          cp "$WORKSPACE/QuackerVST/QuackerVST.jucer" "$WORKSPACE/QuackerVST/QuackerVST.jucer.bak"
          
          # Update all module paths directly using sed
          sed -i '' -E "s#<MODULEPATH id=\"([^\"]*)\" path=\"[^\"]*\"/>#<MODULEPATH id=\"\1\" path=\"$JUCE_MODULES_PATH\"/>#g" "$WORKSPACE/QuackerVST/QuackerVST.jucer"
          
          echo "Verifying updated module paths:"
          grep -A 1 MODULEPATH "$WORKSPACE/QuackerVST/QuackerVST.jucer" || echo "No MODULEPATH found after update"
      
      - name: Resave JUCER file AFTER updating paths
        run: |
          echo "Resaving project file using Projucer at: $PROJUCER_PATH"
          # Ensure file exists and is executable
          if [ ! -f "$PROJUCER_PATH" ]; then
            echo "ERROR: Projucer executable not found at $PROJUCER_PATH"
            find $WORKSPACE/External -name "Projucer" -type f
            exit 1
          fi
          
          # Use the absolute path to the Projucer
          "$PROJUCER_PATH" --resave "$WORKSPACE/QuackerVST/QuackerVST.jucer"
      
      - name: Build Plugin
        run: |
          echo "Building plugin"
          cd QuackerVST/Builds/MacOSX
          xcodebuild -configuration Release
      
      - name: Package Plugin
        run: |
          echo "Packaging plugin"
          mkdir -p artifacts
          
          # Display the build output directory structure for debugging
          echo "Build directory structure:"
          find $WORKSPACE/QuackerVST/Builds/MacOSX/build -type d | sort
          
          # Package VST3
          if [ -d "$WORKSPACE/QuackerVST/Builds/MacOSX/build/Release/VST3/$PLUGIN_NAME.vst3" ]; then
            cd $WORKSPACE/QuackerVST/Builds/MacOSX/build/Release/VST3
            zip -r "$WORKSPACE/artifacts/$PLUGIN_NAME-VST3-macOS.zip" ./$PLUGIN_NAME.vst3
            cd $WORKSPACE
          else
            echo "VST3 build not found"
            find $WORKSPACE/QuackerVST/Builds -name "*.vst3" -o -name "VST3"
          fi
          
          # Package AU
          if [ -d "$WORKSPACE/QuackerVST/Builds/MacOSX/build/Release/AU/$PLUGIN_NAME.component" ]; then
            cd $WORKSPACE/QuackerVST/Builds/MacOSX/build/Release/AU
            zip -r "$WORKSPACE/artifacts/$PLUGIN_NAME-AU-macOS.zip" ./$PLUGIN_NAME.component
            cd $WORKSPACE
          else
            echo "AU build not found"
            find $WORKSPACE/QuackerVST/Builds -name "*.component" -o -name "AU"
          fi
          
          # Package Standalone
          if [ -d "$WORKSPACE/QuackerVST/Builds/MacOSX/build/Release/Standalone/$PLUGIN_NAME.app" ]; then
            cd $WORKSPACE/QuackerVST/Builds/MacOSX/build/Release/Standalone
            zip -r "$WORKSPACE/artifacts/$PLUGIN_NAME-Standalone-macOS.zip" ./$PLUGIN_NAME.app
            cd $WORKSPACE
          else
            echo "Standalone build not found"
            find $WORKSPACE/QuackerVST/Builds -name "*.app" -o -name "Standalone"
          fi
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PLUGIN_NAME }}-macOS-Builds
          path: artifacts/
          retention-days: 30
