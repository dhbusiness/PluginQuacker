name: Build JUCE Plugin

on:
  workflow_dispatch:  # manually triggered via the GitHub Actions UI

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Clone JUCE Repository
        run: |
          # Clone the JUCE repo into a folder named "juce"
          git clone https://github.com/juce-framework/JUCE.git juce

      - name: Build Projucer from JUCE
        working-directory: juce/Projucer/Builds/MacOSX
        run: |
          # Build the Projucer (this example assumes an Xcode project exists)
          xcodebuild -project Projucer.xcodeproj -scheme Projucer -configuration Release clean build \
                     -derivedDataPath ../../build

      - name: Resave the .jucer file and Export Xcode Project
        run: |
          # Adjust the path to the built Projucer binary as needed
          JUCE_PROJUCER="./juce/Projucer/Builds/MacOSX/build/Build/Products/Release/Projucer"
          # Resave to update the project file (which also generates exporters if set up)
          $JUCE_PROJUCER --resave QuackerVST/QuackerVST.jucer
          # (Optional) If you need to explicitly export, you could call:
          $JUCE_PROJUCER --export Xcode QuackerVST/QuackerVST.jucer

      - name: Build the Xcode Project
        run: |
          # Assuming the Xcode project was exported to QuackerVST/Builds/MacOSX/
          xcodebuild -project QuackerVST/Builds/MacOSX/QuackerVST.xcodeproj \
                     -configuration Release clean build

      - name: Zip the Build Product
        run: |
          cd QuackerVST/Builds/MacOSX
          zip -r QuackerVST.zip Release/

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: QuackerVST-build
          path: QuackerVST/Builds/MacOSX/QuackerVST.zip
